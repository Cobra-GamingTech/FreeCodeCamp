FCC says:
The next layout scheme that CSS offers is the 'fixed' position, which is a type of absolute positioning that locks 
an element relative to the browser window. Similar to absolute positioning, it's used with the CSS offset properties
and also removes the element from the normal flow of the document. Other items no longer "realize" where it is positioned,
which may require some layout adjustments elsewhere.

One key difference between the 'fixed' and 'absolute' positions is that an element with a fixed position won't move when the
user scrolls.

This is the initial code:
<style>
  body {
    min-height: 150vh;
  }
  #navbar {



    width: 100%;
    background-color: #767676;
  }
  nav ul {
    margin: 0px;
    padding: 5px 0px 5px 30px;
  }
  nav li {
    display: inline;
    margin-right: 20px;
  }
  a {
    text-decoration: none;
  }
</style>
<body>
  <header>
    <h1>Welcome!</h1>
    <nav id="navbar">
      <ul>
        <li><a href="">Home</a></li>
        <li><a href="">Contact</a></li>
      </ul>
    </nav>
  </header>
  <p>I shift up when the #navbar is fixed to the browser window.</p>
</body>

The task required me to change the 'position' of the navigation bar to 'fixed'
Offset it to 0 pixels from the 'top' and 0 pixels from the 'left'

This was my code:
#navbar {
      position: fixed;
      top: 0px;
      left: 0px;
      width: 100%;
      background-color: #767676;
  }

Don't forget to scroll up and down to see the effects of your code where the navigation bar does not move.
