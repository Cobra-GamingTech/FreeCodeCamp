FCC says:
When elements have a specified position, such as fixed or relative, the CSS offset properties right, left, top, and bottom 
can be used in animation rules to create movement.

As shown in the example below, you can push the item downwards then upwards by setting the top property 
of the 50% keyframe to 50px, but having it set to 0px for the first (0%) and the last (100%) keyframe.

@keyframes rainbow {
  0% {
    background-color: blue;
    top: 0px;
  }
  50% {
    background-color: green;
    top: 50px;
  }
  100% {
    background-color: yellow;
    top: 0px;
  }
}

The initial code:
<style>
  div {
    height: 40px;
    width: 70%;
    background: black;
    margin: 50px auto;
    border-radius: 5px;
    position: relative;
  }

  #rect {
    animation-name: rainbow;
    animation-duration: 4s;
  }

  @keyframes rainbow {
    0% {
      background-color: blue;
      top: 0px;

    }
    50% {
      background-color: green;
      top: 50px;

    }
    100% {
      background-color: yellow;
      top: 0px;

    }
  }
</style>

<div id="rect"></div>

The task required me to add a horizontal motion to the div animation. 
Using the left offset property, add to the @keyframes rule so rainbow starts at 0 pixels at 0%, 
moves to 25 pixels at 50%, and ends at -25 pixels at 100%. 
Don't replace the top property in the editor - the animation should have both vertical and horizontal motion.

This was my code:
@keyframes rainbow {
    0% {
      background-color: blue;
      left: 0px;

    }
    50% {
      background-color: green;
      left: 25px;

    }
    100% {
      background-color: yellow;
      left: -25px;

    }
  }

You should see movement and colour changes within the testing environment.
